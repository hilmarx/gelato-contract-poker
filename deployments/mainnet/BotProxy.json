{
  "address": "0x52677d053fE817C40556ed1f4178aAC360619115",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_gelato",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ops",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorised",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "_datas",
          "type": "bytes[]"
        }
      ],
      "name": "exec_chainCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_receipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "exec_sendEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_add",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_authorised",
          "type": "bool"
        }
      ],
      "name": "exec_setAuthorised",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "exec_targetCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gelato",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ops",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x027c16d08442744c01fb1e2ed8591e20c32a8546eafdaff955bb6bc2c3132e66",
  "receipt": {
    "to": null,
    "from": "0xCDf41a135C65d0013393B3793F92b4FAF31032d0",
    "contractAddress": "0x52677d053fE817C40556ed1f4178aAC360619115",
    "transactionIndex": 164,
    "gasUsed": "785491",
    "logsBloom": "0x
    "blockHash": "0x80cd21ded52e36cf672b75a77d4597b6b8355584995974671a0c653af696bc43",
    "transactionHash": "0x027c16d08442744c01fb1e2ed8591e20c32a8546eafdaff955bb6bc2c3132e66",
    "logs": [
      {
        "transactionIndex": 164,
        "blockNumber": 14260990,
        "transactionHash": "0x027c16d08442744c01fb1e2ed8591e20c32a8546eafdaff955bb6bc2c3132e66",
        "address": "0x52677d053fE817C40556ed1f4178aAC360619115",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000cdf41a135c65d0013393b3793f92b4faf31032d0"
        ],
        "data": "0x",
        "logIndex": 179,
        "blockHash": "0x80cd21ded52e36cf672b75a77d4597b6b8355584995974671a0c653af696bc43"
      }
    ],
    "blockNumber": 14260990,
    "cumulativeGasUsed": "9978381",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3CACa7b48D0573D793d3b0279b5F0029180E83b6",
    "0xB3f5503f93d5Ef84b06993a1975B9D21B962892F"
  ],
  "solcInputHash": "c08581c5e44beb1121212bcdac80d937",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_gelato\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ops\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorised\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_datas\",\"type\":\"bytes[]\"}],\"name\":\"exec_chainCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_receipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"exec_sendEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_authorised\",\"type\":\"bool\"}],\"name\":\"exec_setAuthorised\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"exec_targetCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gelato\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ops\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BotProxy.sol\":\"BotProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Receiver.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC721Receiver} interface.\\n *\\n * Accepts all token transfers.\\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\\n */\\ncontract ERC721Holder is IERC721Receiver {\\n    /**\\n     * @dev See {IERC721Receiver-onERC721Received}.\\n     *\\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC721Received.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x8756c97d6004b1ae21517a013bdec72fbf30be7852afb2f395871d280131b250\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/BotProxy.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {Address} from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport {\\n    ERC721Holder\\n} from \\\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\\\";\\n\\ninterface IOps {\\n    function getFeeDetails() external view returns (uint256, address);\\n}\\n\\ncontract BotProxy is Ownable, ERC721Holder {\\n    using Address for address;\\n    using Address for address payable;\\n\\n    address public immutable ops;\\n    address payable public immutable gelato;\\n    mapping(address => bool) public authorised;\\n\\n    modifier onlyAuthorised() {\\n        require(\\n            authorised[msg.sender] ||\\n                msg.sender == address(this) ||\\n                msg.sender == owner(),\\n            \\\"N.A.\\\"\\n        );\\n\\n        _;\\n    }\\n\\n    constructor(address payable _gelato, address _ops) {\\n        gelato = _gelato;\\n        ops = _ops;\\n    }\\n\\n    receive() external payable {}\\n\\n    // solhint-disable func-name-mixedcase\\n    function exec_setAuthorised(address _add, bool _authorised)\\n        external\\n        onlyOwner\\n    {\\n        authorised[_add] = _authorised;\\n    }\\n\\n    function exec_chainCall(bytes[] memory _datas) external onlyAuthorised {\\n        for (uint256 i; i < _datas.length; i++) {\\n            address(this).functionCall(_datas[i]);\\n        }\\n    }\\n\\n    function exec_targetCall(\\n        address _target,\\n        bytes memory _data,\\n        uint256 _value\\n    ) public onlyAuthorised {\\n        _target.functionCallWithValue(_data, _value);\\n    }\\n\\n    function exec_sendEth(address payable _receipient, uint256 _amount)\\n        public\\n        onlyAuthorised\\n    {\\n        _receipient.sendValue(_amount);\\n    }\\n\\n    function _exec_sendOpsFee() internal {\\n        uint256 fee;\\n        address feeToken;\\n\\n        (fee, feeToken) = IOps(ops).getFeeDetails();\\n\\n        exec_sendEth(gelato, fee);\\n    }\\n}\\n\",\"keccak256\":\"0x6e48643a697d7e1fdeb037827f6d049e0e28d089fb924169838f566264b17685\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610dd5380380610dd583398101604081905261002f916100b7565b6100383361004f565b6001600160a01b0391821660a052166080526100f1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146100b457600080fd5b50565b600080604083850312156100ca57600080fd5b82516100d58161009f565b60208401519092506100e68161009f565b809150509250929050565b60805160a051610cbf6101166000396000610107015260006102280152610cbf6000f3fe6080604052600436106100a05760003560e01c8063b80b7ceb11610064578063b80b7ceb14610196578063d69d59b5146101b6578063d6eb1bbf146101d6578063e70abe9214610216578063e77da5171461024a578063f2fde38b1461026a57600080fd5b8063150b7a02146100ac578063573ea575146100f5578063715018a614610141578063886b37e6146101585780638da5cb5b1461017857600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100d76100c7366004610944565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561010157600080fd5b506101297f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ec565b34801561014d57600080fd5b5061015661028a565b005b34801561016457600080fd5b506101566101733660046109b0565b6102c9565b34801561018457600080fd5b506000546001600160a01b0316610129565b3480156101a257600080fd5b506101566101b13660046109dc565b61032e565b3480156101c257600080fd5b506101566101d1366004610a35565b610396565b3480156101e257600080fd5b506102066101f1366004610af8565b60016020526000908152604090205460ff1681565b60405190151581526020016100ec565b34801561022257600080fd5b506101297f000000000000000000000000000000000000000000000000000000000000000081565b34801561025657600080fd5b50610156610265366004610b15565b610438565b34801561027657600080fd5b50610156610285366004610af8565b61048d565b6000546001600160a01b031633146102bd5760405162461bcd60e51b81526004016102b490610b53565b60405180910390fd5b6102c76000610528565b565b3360009081526001602052604090205460ff16806102e657503330145b806102fb57506000546001600160a01b031633145b6103175760405162461bcd60e51b81526004016102b490610b88565b61032a6001600160a01b03831682610578565b5050565b3360009081526001602052604090205460ff168061034b57503330145b8061036057506000546001600160a01b031633145b61037c5760405162461bcd60e51b81526004016102b490610b88565b6103906001600160a01b0384168383610696565b50505050565b3360009081526001602052604090205460ff16806103b357503330145b806103c857506000546001600160a01b031633145b6103e45760405162461bcd60e51b81526004016102b490610b88565b60005b815181101561032a5761042582828151811061040557610405610ba6565b6020026020010151306001600160a01b03166106c690919063ffffffff16565b508061043081610bbc565b9150506103e7565b6000546001600160a01b031633146104625760405162461bcd60e51b81526004016102b490610b53565b6001600160a01b03919091166000908152600160205260409020805460ff1916911515919091179055565b6000546001600160a01b031633146104b75760405162461bcd60e51b81526004016102b490610b53565b6001600160a01b03811661051c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102b4565b61052581610528565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b804710156105c85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102b4565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610615576040519150601f19603f3d011682016040523d82523d6000602084013e61061a565b606091505b50509050806106915760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102b4565b505050565b60606106bc848484604051806060016040528060298152602001610c6160299139610708565b90505b9392505050565b60606106bf83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610830565b6060824710156107695760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102b4565b843b6107b75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102b4565b600080866001600160a01b031685876040516107d39190610c11565b60006040518083038185875af1925050503d8060008114610810576040519150601f19603f3d011682016040523d82523d6000602084013e610815565b606091505b509150915061082582828661083f565b979650505050505050565b60606106bc8484600085610708565b6060831561084e5750816106bf565b82511561085e5782518084602001fd5b8160405162461bcd60e51b81526004016102b49190610c2d565b6001600160a01b038116811461052557600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156108cc576108cc61088d565b604052919050565b600082601f8301126108e557600080fd5b813567ffffffffffffffff8111156108ff576108ff61088d565b610912601f8201601f19166020016108a3565b81815284602083860101111561092757600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561095a57600080fd5b843561096581610878565b9350602085013561097581610878565b925060408501359150606085013567ffffffffffffffff81111561099857600080fd5b6109a4878288016108d4565b91505092959194509250565b600080604083850312156109c357600080fd5b82356109ce81610878565b946020939093013593505050565b6000806000606084860312156109f157600080fd5b83356109fc81610878565b9250602084013567ffffffffffffffff811115610a1857600080fd5b610a24868287016108d4565b925050604084013590509250925092565b60006020808385031215610a4857600080fd5b823567ffffffffffffffff80821115610a6057600080fd5b818501915085601f830112610a7457600080fd5b813581811115610a8657610a8661088d565b8060051b610a958582016108a3565b9182528381018501918581019089841115610aaf57600080fd5b86860192505b83831015610aeb57823585811115610acd5760008081fd5b610adb8b89838a01016108d4565b8352509186019190860190610ab5565b9998505050505050505050565b600060208284031215610b0a57600080fd5b81356106bf81610878565b60008060408385031215610b2857600080fd5b8235610b3381610878565b915060208301358015158114610b4857600080fd5b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600490820152632717209760e11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610bde57634e487b7160e01b600052601160045260246000fd5b5060010190565b60005b83811015610c00578181015183820152602001610be8565b838111156103905750506000910152565b60008251610c23818460208701610be5565b9190910192915050565b6020815260008251806020840152610c4c816040850160208701610be5565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a264697066735822122091e7698e6e9ef987c7ca6926afb9c4aa6f892b73ec4a4375e464374b7574785c64736f6c634300080c0033",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c8063b80b7ceb11610064578063b80b7ceb14610196578063d69d59b5146101b6578063d6eb1bbf146101d6578063e70abe9214610216578063e77da5171461024a578063f2fde38b1461026a57600080fd5b8063150b7a02146100ac578063573ea575146100f5578063715018a614610141578063886b37e6146101585780638da5cb5b1461017857600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100d76100c7366004610944565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561010157600080fd5b506101297f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ec565b34801561014d57600080fd5b5061015661028a565b005b34801561016457600080fd5b506101566101733660046109b0565b6102c9565b34801561018457600080fd5b506000546001600160a01b0316610129565b3480156101a257600080fd5b506101566101b13660046109dc565b61032e565b3480156101c257600080fd5b506101566101d1366004610a35565b610396565b3480156101e257600080fd5b506102066101f1366004610af8565b60016020526000908152604090205460ff1681565b60405190151581526020016100ec565b34801561022257600080fd5b506101297f000000000000000000000000000000000000000000000000000000000000000081565b34801561025657600080fd5b50610156610265366004610b15565b610438565b34801561027657600080fd5b50610156610285366004610af8565b61048d565b6000546001600160a01b031633146102bd5760405162461bcd60e51b81526004016102b490610b53565b60405180910390fd5b6102c76000610528565b565b3360009081526001602052604090205460ff16806102e657503330145b806102fb57506000546001600160a01b031633145b6103175760405162461bcd60e51b81526004016102b490610b88565b61032a6001600160a01b03831682610578565b5050565b3360009081526001602052604090205460ff168061034b57503330145b8061036057506000546001600160a01b031633145b61037c5760405162461bcd60e51b81526004016102b490610b88565b6103906001600160a01b0384168383610696565b50505050565b3360009081526001602052604090205460ff16806103b357503330145b806103c857506000546001600160a01b031633145b6103e45760405162461bcd60e51b81526004016102b490610b88565b60005b815181101561032a5761042582828151811061040557610405610ba6565b6020026020010151306001600160a01b03166106c690919063ffffffff16565b508061043081610bbc565b9150506103e7565b6000546001600160a01b031633146104625760405162461bcd60e51b81526004016102b490610b53565b6001600160a01b03919091166000908152600160205260409020805460ff1916911515919091179055565b6000546001600160a01b031633146104b75760405162461bcd60e51b81526004016102b490610b53565b6001600160a01b03811661051c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102b4565b61052581610528565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b804710156105c85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102b4565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610615576040519150601f19603f3d011682016040523d82523d6000602084013e61061a565b606091505b50509050806106915760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102b4565b505050565b60606106bc848484604051806060016040528060298152602001610c6160299139610708565b90505b9392505050565b60606106bf83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610830565b6060824710156107695760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102b4565b843b6107b75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102b4565b600080866001600160a01b031685876040516107d39190610c11565b60006040518083038185875af1925050503d8060008114610810576040519150601f19603f3d011682016040523d82523d6000602084013e610815565b606091505b509150915061082582828661083f565b979650505050505050565b60606106bc8484600085610708565b6060831561084e5750816106bf565b82511561085e5782518084602001fd5b8160405162461bcd60e51b81526004016102b49190610c2d565b6001600160a01b038116811461052557600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156108cc576108cc61088d565b604052919050565b600082601f8301126108e557600080fd5b813567ffffffffffffffff8111156108ff576108ff61088d565b610912601f8201601f19166020016108a3565b81815284602083860101111561092757600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561095a57600080fd5b843561096581610878565b9350602085013561097581610878565b925060408501359150606085013567ffffffffffffffff81111561099857600080fd5b6109a4878288016108d4565b91505092959194509250565b600080604083850312156109c357600080fd5b82356109ce81610878565b946020939093013593505050565b6000806000606084860312156109f157600080fd5b83356109fc81610878565b9250602084013567ffffffffffffffff811115610a1857600080fd5b610a24868287016108d4565b925050604084013590509250925092565b60006020808385031215610a4857600080fd5b823567ffffffffffffffff80821115610a6057600080fd5b818501915085601f830112610a7457600080fd5b813581811115610a8657610a8661088d565b8060051b610a958582016108a3565b9182528381018501918581019089841115610aaf57600080fd5b86860192505b83831015610aeb57823585811115610acd5760008081fd5b610adb8b89838a01016108d4565b8352509186019190860190610ab5565b9998505050505050505050565b600060208284031215610b0a57600080fd5b81356106bf81610878565b60008060408385031215610b2857600080fd5b8235610b3381610878565b915060208301358015158114610b4857600080fd5b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600490820152632717209760e11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610bde57634e487b7160e01b600052601160045260246000fd5b5060010190565b60005b83811015610c00578181015183820152602001610be8565b838111156103905750506000910152565b60008251610c23818460208701610be5565b9190910192915050565b6020815260008251806020840152610c4c816040850160208701610be5565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a264697066735822122091e7698e6e9ef987c7ca6926afb9c4aa6f892b73ec4a4375e464374b7574785c64736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/BotProxy.sol:BotProxy",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 501,
        "contract": "contracts/BotProxy.sol:BotProxy",
        "label": "authorised",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}